import React from 'react';
import { Badge } from "@/components/ui/badge";

interface TextGenerationIndicatorProps {
  model?: string;
  validated?: boolean;
  issues?: string[];
  className?: string;
}

export function TextGenerationIndicator({ 
  model, 
  validated, 
  issues, 
  className = "" 
}: TextGenerationIndicatorProps) {
  if (!model) return null;

  const getStatusInfo = () => {
    if (model === "fallback") {
      return {
        label: "Fallback",
        variant: "secondary" as const,
        description: "Using backup content due to generation issues"
      };
    }
    
    if (validated === true) {
      return {
        label: "Validated",
        variant: "default" as const,
        description: `Generated by ${model} and passed validation`
      };
    }
    
    if (validated === false) {
      return {
        label: "Draft",
        variant: "outline" as const,
        description: `Generated by ${model} but may need refinement`
      };
    }
    
    return {
      label: model.includes("gpt-5") ? "GPT-5" : "AI",
      variant: "default" as const,
      description: `Generated by ${model}`
    };
  };

  const statusInfo = getStatusInfo();

  return (
    <div className={`flex items-center gap-2 ${className}`}>
      <Badge variant={statusInfo.variant} className="text-xs">
        {statusInfo.label}
      </Badge>
      {issues && issues.length > 0 && (
        <span className="text-xs text-muted-foreground" title={issues.join("; ")}>
          ({issues.length} notes)
        </span>
      )}
    </div>
  );
}